export {TreeHeaderProjector}

/**
 *
 * @param treeController
 * @param rootElement
 * @param tree
 * @constructor
 */
const TreeHeaderProjector = (treeController, rootElement, tree) => {
    let colorDivision;
    const init = _ => {

        colorDivision = document.createElement("DIV");
        colorDivision.setAttribute('class', 'colorDivision');

        const colorChosen = tree;
        const g = '#B5E06C';
        const r = '#f22222';
        const hexColor= (colorChosen == 'green') ? g :r;

        colorDivision.innerHTML = `<?xml version="1.0" encoding="iso-8859-1"?>
        <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
        <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
             viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
        
        <path style="fill:${hexColor};" d="M398.854,154.296c25.878,16.508,43.06,45.443,43.06,78.408c0,51.332-41.625,92.957-92.957,92.957
            c-23.32,0-44.619-8.597-60.94-22.784v-40.015c0-8.834-3.581-16.845-9.383-22.634c-5.79-5.802-13.8-9.383-22.634-9.383
            c-17.693,0-32.03,14.337-32.03,32.017v40.028c-16.321,14.174-37.62,22.771-60.927,22.771c-51.345,0-92.957-41.625-92.957-92.957
            c0-32.965,17.169-61.901,43.047-78.408C113.695,75.875,177.442,12.477,256,12.477S398.293,75.875,398.854,154.296z"/>
        <path style="fill:#B39213;" d="M223.97,302.89v-40.028c0-17.681,14.337-32.017,32.03-32.017c8.834,0,16.845,3.581,22.634,9.383
            c5.802,5.79,9.383,13.8,9.383,22.634v40.015v196.645H223.97V302.89z"/>
        <path d="M163.043,338.139c-58.136,0-105.435-47.298-105.435-105.435c0-33.926,16.039-65.266,43.233-85.116
            c1.895-38.767,17.971-74.937,45.684-102.462C175.824,16.026,214.702,0,256,0c20.179,0,39.813,3.814,58.36,11.338
            c6.386,2.59,9.463,9.867,6.873,16.252c-2.59,6.385-9.863,9.463-16.252,6.873c-15.553-6.309-32.032-9.508-48.98-9.508
            c-71.386,0-129.878,58.063-130.389,129.431c-0.03,4.23-2.201,8.155-5.767,10.43c-23.344,14.891-37.28,40.27-37.28,67.889
            c0,44.376,36.104,80.48,80.48,80.48c19.375,0,38.107-7.001,52.746-19.714c5.203-4.518,13.084-3.963,17.602,1.239
            c4.518,5.203,3.964,13.084-1.239,17.602C212.975,328.966,188.431,338.139,163.043,338.139z"/>
        <path d="M342.319,53.979c-2.629,0-5.28-0.829-7.536-2.542c-1.173-0.89-2.361-1.762-3.564-2.613c-5.626-3.98-6.96-11.767-2.98-17.392
            c3.978-5.626,11.768-6.96,17.391-2.98c1.42,1.004,2.846,2.051,4.244,3.113c5.488,4.167,6.558,11.995,2.391,17.483
            C349.811,52.278,346.086,53.979,342.319,53.979z"/>
        <path d="M348.957,338.139c-25.403,0-49.952-9.178-69.125-25.845c-5.201-4.522-5.752-12.403-1.23-17.603
            c4.519-5.201,12.4-5.752,17.602-1.232c14.631,12.72,33.366,19.724,52.753,19.724c44.376,0,80.48-36.104,80.48-80.48
            c0-27.614-13.941-52.993-37.293-67.889c-3.565-2.275-5.737-6.2-5.767-10.43c-0.217-30.152-10.965-59.48-30.267-82.585
            c-4.417-5.288-3.712-13.157,1.577-17.574c5.287-4.418,13.155-3.713,17.576,1.576c21.585,25.838,34.193,58.207,35.879,91.783
            c27.205,19.854,43.249,51.195,43.249,85.12C454.392,290.841,407.095,338.139,348.957,338.139z"/>
        <path d="M288.017,512c-6.89,0-12.477-5.586-12.477-12.477v-236.66c0-5.221-2.031-10.122-5.72-13.801
            c-3.7-3.707-8.601-5.738-13.82-5.738c-10.782,0-19.552,8.765-19.552,19.54v236.66c0,6.891-5.586,12.477-12.477,12.477
            s-12.477-5.586-12.477-12.477v-236.66c0-24.534,19.965-44.495,44.507-44.495c11.896,0,23.071,4.633,31.467,13.048
            c8.395,8.376,13.028,19.551,13.028,31.448v236.66C300.495,506.414,294.908,512,288.017,512z"/>
        <path d="M334.608,512H177.392c-6.891,0-12.477-5.586-12.477-12.477c0-6.891,5.586-12.477,12.477-12.477h157.216
            c6.89,0,12.477,5.586,12.477,12.477C347.085,506.414,341.498,512,334.608,512z"/>
        
        </svg>`;

    }

    treeController.onTreeSetUp(()=> {
        if (rootElement.childNodes.length >0 &&
            undefined !== rootElement.children[0]) {
                rootElement.removeChild(rootElement.children[0]);
        }
        rootElement.style.display="none";
    });

    init();
    rootElement.appendChild(colorDivision);
    rootElement.style.display="block";
}